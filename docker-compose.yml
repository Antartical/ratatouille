version: "3"

services:
  ##############################################################################
  #                                DEPENDENCIES                                #
  ##############################################################################

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - ratatouille-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.8.0
    container_name: kibana
    environment:
      SERVER_NAME: localhost
      ELASTICSEARCH_URL: http://elasticsearch:9200/
    ports:
      - 5601:5601
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    networks:
      - ratatouille-network

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - ratatouille-network

  pelipper:
    image: ghcr.io/antartical/pelipper
    container_name: pelipper
    ports:
      - "9000:9000"
    environment:
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
      - SMTP_USER=admin
      - SMTP_PASSWORD=admin
    networks:
      - ratatouille-network

  postgres:
    image: postgres:13.1-alpine
    container_name: postgres.antartical
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_MULTIPLE_DATABASES=paris,frodo,test
      - POSTGRES_EXTENSIONS=uuid-ossp
    ports:
      - "5432:5432"
    volumes:
      - ./build/extra/postgres:/docker-entrypoint-initdb.d
      - antartical.paris:/var/lib/postgresql/data
    networks:
      - ratatouille-network

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - ratatouille-network

  gandalf:
    image: ghcr.io/antartical/gandalf
    container_name: gandalf
    ports:
      - "9100:9100"
    volumes:
      - ./build/extra/gandalf:/docker-entrypoint-initdb.d
    environment:
      - ENVIRONMENT=docker
      - JWT_TOKEN_TTL=60
      - JWT_TOKEN_RTTL=1440
      - JWT_TOKEN_KEY=mysupersecret
      - PELIPPER_HOST=http://pelipper:9000
      - PELIPPER_SMTP_ACCOUNT=accounts@antartical.com
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=frodo
      - POSTGRES_DB_TEST=test
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - USER_EMAIL=test@test.com
      - USER_PASSWORD=testtesttest
    networks:
      - ratatouille-network

  ################################################################################
  #                                RATATOUILLE                                   #
  ################################################################################
  ratatouille:
    build:
      context: .
      dockerfile: build/docker/dockerfile.local
    container_name: ratatouille
    command: "serve:watch"
    volumes:
      - ./ratatouille:/app/ratatouille
      - ./cli:/app/cli
      - ./aerich.ini:/app/aerich.ini
      - ./migrations:/app/migrations
      - ./pyproject.toml:/app/pyproject.toml
      - ./manage.py:/app/manage.py
    ports:
      - "9400:9400"
    env_file:
      - ./build/env/.env
    networks:
      - ratatouille-network

################################################################################
#                                   NETWORKS                                   #
################################################################################
networks:
  ratatouille-network:
    driver: bridge

################################################################################
#                                   VOLUMES                                    #
################################################################################
volumes:
  antartical.paris:
  data01:
    driver: local
